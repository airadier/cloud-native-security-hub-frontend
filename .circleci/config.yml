version: 2.0

variables:
  npm_config_cache: "$CI_PROJECT_DIR/.npm"
  CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"

jobs:
  install:
    docker:
      - image: node:12.6.0
    steps:
      - run: npm ci
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
            - cache/Cypress

  build:node:
    docker:
      - image: node:12.6.0
    working_directory: ~/circleci-demo-workflows
    steps:
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run: npm run build
      - save_cache:
          key: dependency-build-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/.nuxt

  test:unit:
    docker:
      - image: node:12.6.0
    working_directory: ~/circleci-demo-workflows
    steps:
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run: npm run test:unit:coverage
      - store_test_results:
          path: coverage/clover.xml

  test:acceptance:
    docker:
      - image: node:12.6.0
    working_directory: ~/circleci-demo-workflows
    steps:
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run: npm run test:acceptance
      - store_artifacts:
          path:
            - test/e2e/videos/**/*.mp4
      - store_artifacts:
          path:
            - test/e2e/videos/**/*.mp4

  build:docker:
    docker:
      - image: docker:stable
    working_directory: ~/circleci-demo-workflows
    steps:
      - restore_cache:
          key: dependency-build-{{ .Environment.CIRCLE_SHA1 }}
      - run: docker build -t web .

  deploy:
    docker:
      - image: alpine
    steps:
      - run: echo "deploy"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - install
      - build:node
      - test:unit
      - test:acceptance:
          requires:
            - build:node
      - build:docker:
          requires:
            - build:node
      - deploy:
          requires:
            - build:docker
